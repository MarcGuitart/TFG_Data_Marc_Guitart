services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=tfg
      - DOCKER_INFLUXDB_INIT_BUCKET=pipeline
      - DOCKER_INFLUXDB_INIT_RETENTION=168h
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=admin_token
    volumes:
      - influxdb_data:/var/lib/influxdb2

  window_loader:
    build:
      context: ../
      dockerfile: docker/Dockerfile.window_loader
    environment:
      - KAFKA_BROKER=kafka:9092
      - TOPIC_RAW=telemetry.raw
      - TOPIC_AGENT_IN=telemetry.agent.in
    volumes:
      - shared_data:/app/data
    depends_on:
      - kafka

  agent:
    build:
      context: ../
      dockerfile: docker/Dockerfile.agent
    environment:
      - KAFKA_BROKER=kafka:9092
      - TOPIC_AGENT_IN=telemetry.agent.in
      - TOPIC_AGENT_OUT=telemetry.agent.out
      - FLAVOR=inference
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_TOKEN=admin_token
      - INFLUX_ORG=tfg
      - INFLUX_BUCKET=pipeline
      - MAX_ROWS_PER_UNIT=1000
    depends_on:
      - kafka
      - influxdb

  window_collector:  
    build:
      context: ..
      dockerfile: docker/Dockerfile.window_collector
    environment:
      - KAFKA_BROKER=kafka:9092
      - TOPIC_AGENT_OUT=telemetry.agent.out
      - DEDUP_KEY=timestamp,id
    ports:
      - "8082:8082"
    depends_on:
      - kafka
    networks:
      - default
    volumes:
      - shared_data:/app/data
    restart: always

  orchestrator:
    build:
      context: ../
      dockerfile: docker/Dockerfile.orchestrator
    ports:
      - "8081:8081"
    depends_on:
      - window_loader
      - agent
      - window_collector
    networks:
      - default
    volumes:
      - shared_data:/app/data

volumes:
  kafka_data:
  influxdb_data:
  shared_data:
